#include<bits/stdc++.h>
#pragma optimize(3)
using namespace std;
#define rep(i,j,n) for(int i=j;i<=n;i++)

vector<int> p,q;
#define pb push_back
long long a,b;
typedef long long ll;
long long mod =1e9+7;
ll pmod(ll x,ll y)
{
    ll z=1;
    while(y)
    {
        if(y&1)
            z=z*x%mod;
        x=x*x%mod;
        y>>=1;
    }
    return z;
}
long long premul[21][22]= {{(1),(0)},
    {(500000004),(500000004),(0)},
    {(333333336),(500000004),(166666668),(0)},
    {(250000002),(500000004),(250000002),(0),(0)},
    {(400000003),(500000004),(333333336),(0),(-233333335),(0)},
    {(166666668),(500000004),(416666670),(0),(-83333334),(0),(0)},
    {(142857144),(500000004),(500000004),(0),(-166666668),(0),(23809524),(0)},
    {(125000001),(500000004),(583333338),(0),(-291666669),(0),(83333334),(0),(0)},
    {(111111112),(500000004),(666666672),(0),(-266666669),(0),(222222224),(0),(-233333335),(0)},
    {(700000005),(500000004),(750000006),(0),(-900000007),(0),(500000004),(0),(-550000004),(0),(0)},
    {(818181824),(500000004),(833333340),(0),(-1),(0),(1),(0),(-500000004),(0),(348484851),(0)},
    {(83333334),(500000004),(916666674),(0),(-375000004),(0),(833333341),(0),(-375000004),(0),(416666670),(0),(0)},
    {(153846155),(500000004),(1),(0),(-833333341),(0),(142857147),(0),(-100000004),(0),(666666673),(0),(-37377693),(0)},
    {(71428572),(500000004),(83333335),(0),(-183333337),(0),(107142863),(0),(-550000011),(0),(416666675),(0),(642210439),(-102942444),(0)},
    {(466666670),(506957630),(569294553),(86916782),(-337464079),(0),(944444459),(0),(-155282682),(0),(-393612639),(0),(651580704),(-961438576),(971001972),(-926824857)},
    {(562500004),(-297206413),(-504321380),(-310409642),(420745089),(-515535934),(-143476644),(0),(-958567223),(-579555959),(-587963002),(-240241113),(-104231706),(-15403394),(-971454418),(-728789860),(-651273634)},
    {(352941179),(-502125791),(-831487267),(-395507064),(298003080),(-398813372),(227197249),(-217955354),(-740421085),(-664112483),(-429271636),(-245878783),(585823082),(-162925762),(701744997),(-601859126),(-208060447),(-402078772)},
    {(55555556),(-228998876),(-960732935),(370177345),(-778995800),(774804160),(-354921366),(-839804099),(9951913),(-905784020),(269212320),(695039506),(305304266),(-843539608),(-571452979),(529691602),(-426447671),(777800274),(767134569)},
    {(157894738),(-4314993),(386157101),(-492140779),(839628215),(635340105),(-795626567),(472968673),(-856546011),(-337805902),(-880834130),(608039971),(563119996),(-602618430),(-41403636),(507897451),(676427937),(14074621),(244964327),(-889302144)},
    {(850000006),(101552701),(679952591),(569327381),(79091372),(582234538),(-202838653),(980293741),(-339169574),(-889699784),(166033178),(857683323),(-23791739),(-636632876),(-715077729),(16287990),(608184041),(245156182),(58770096),(-816704616),(624258995)},
    {(-58502184),(-278215486),(753922474),(701021770),(639218645),(-574655230),(-571037053),(-429989519),(-708255828),(-369177783),(-99650931),(-176952217),(-810987806),(-648620099),(-195544310),(325471009),(-373150213),(122750395),(-50025964),(732255329),(-594519654),(-120062755)}
};

inline ll dv(ll x,ll y)
{
    if(x<0)
        return (x+1)/y-1;
    else
        return x/y;
}

ll A[22][22],nA[22][22],nB[22][22];
ll C[31],d[31],U[31][31];
int main()
{
    ios::sync_with_stdio(false);

    int T;
    long long a,b,c,n,k,k0;
    C[0]=d[0]=1;
    rep(i,1,30)
    C[i]=C[i-1]*i%mod;
    rep(i,1,30)
    d[i]=pmod(C[i],mod-2);
    rep(i,0,30)
    rep(j,0,i)
    U[i][j]=C[i]*d[j]%mod*d[i-j]%mod;
    cin>>T;
    while(T--)
    {
        cin>>a>>b>>c>>n>>k>>k0;
        n--;
        memset(A,0,sizeof(A));
        memset(nA,0,sizeof(nA));
        memset(nB,0,sizeof(nB));
        A[k0][k]=1;
        long long ans=0;
        while(1)
        {
            if(a>=c || b>=c)
            {
                int na = a/c;
                int tmpmul = a%c;
                int nb = b/c;
                int tmpplus = b%c;
                if(tmpplus<0)
                    nb--,tmpplus+=c;
                {
                    rep(j,0,20)
                    {
                        rep(x,0,j)
                        {
                            ll tp = pmod(na, j-x) * U[j][x] % mod;
                            rep(i,j-x,20)
                            {
                                nA[x][i] = (nA[x][i] + A[j][i-j+x] * tp % mod) % mod;
                            }
                        }
                    }

                    rep(i,0,20)
                    rep(j,0,20)
                    A[i][j]= nA[i][j], nA[i][j]=0;

                    rep(j,0,20)
                    {
                        rep(x,0,j)
                        {
                            ll tp = pmod(nb, j-x) * U[j][x] % mod;
                            rep(i,0,20)
                            {
                                nA[x][i] = (nA[x][i] + A[j][i] * tp % mod) % mod;
                            }
                        }
                    }

                    a=tmpmul;
                    b=tmpplus;
                    rep(i,0,20)
                    rep(j,0,20)
                    A[i][j]= nA[i][j], nA[i][j]=0;
                }
            }

            ans=(ans+A[0][0]*(n+1)%mod)%mod;
            A[0][0]=0;
            if(n==0)
                break;

            rep(j,0,20)
            {
                rep(i,0,20-j)
                rep(t,0,i+1)
                {
                    nA[j][t]=(nA[j][t]+A[j][i]*premul[i][i-t+1]%mod)%mod;
                }

                rep(i,0,j-1)
                rep(t,0,21-j)
                nB[t][i]=(nB[t][i]-U[j][i]*nA[j][t]%mod)%mod;
            }

            rep(j,0,20)
            rep(t,0,20)
            ans=(ans+nA[j][t]*pmod(n,t)%mod*pmod((a*n+b)/c,j)%mod)%mod;

            if(a==0)
                break;

            rep(i,0,20)
            rep(j,0,20)
            A[i][j]= nB[i][j], nB[i][j]=nA[i][j]=0;

            n=(a*n+b)/c-1;
            swap(a,c);
            b=a-c-b;

            if(n<0)
                break;

            if(a>=c || b>=c)
            {
                int na = a/c;
                int tmpmul = a%c;
                int nb = b/c;
                int tmpplus = b%c;
                if(tmpplus>0)
                    nb++,tmpplus-=c;
                {
                    rep(j,0,20)
                    {
                        rep(x,0,j)
                        {
                            ll tp = pmod(na, j-x) * U[j][x] % mod;
                            rep(i,j-x,20)
                            {
                                nA[x][i] = (nA[x][i] + A[j][i-j+x] * tp % mod) % mod;
                            }
                        }
                    }

                    rep(i,0,20)
                    rep(j,0,20)
                    A[i][j]= nA[i][j], nA[i][j]=0;

                    rep(j,0,20)
                    {
                        rep(x,0,j)
                        {
                            ll tp = pmod(nb, j-x) * U[j][x] % mod;
                            rep(i,0,20)
                            {
                                nA[x][i] = (nA[x][i] + A[j][i] * tp % mod) % mod;
                            }
                        }
                    }


                    a=tmpmul;
                    b=tmpplus;
                    rep(i,0,20)
                    rep(j,0,20)
                    A[i][j]= nA[i][j], nA[i][j]=0;
                }
            }

            ans=(ans+A[0][0]*(n+1)%mod)%mod;
            A[0][0]=0;
            if(n==0)
                break;
            rep(j,0,20)
            {
                rep(i,0,20-j)
                rep(t,0,i+1)
                {
                    nA[j][t]=(nA[j][t]+A[j][i]*premul[i][i-t+1]%mod)%mod;
                }

                rep(i,0,j-1)
                rep(t,0,21-j)
                nB[t][i]=(nB[t][i]-U[j][i]*nA[j][t]%mod)%mod;
            }

            rep(j,0,20)
            rep(t,0,20)
            ans=(ans+nA[j][t]*pmod(n,t)%mod*pmod(dv(a*n+b-1,c)+1,j)%mod)%mod;

            if(a==0)
                break;


            rep(i,0,20)
            rep(j,0,20)
            A[i][j]= nB[i][j], nB[i][j]=nA[i][j]=0;


            n=dv(a*n+b-1,c);
            swap(a,c);
            b=-b;

            if(n<0)
                break;
        }
        cout<<(ans+mod)%mod<<'\n';
    }
}
